Link: https://leetcode.com/problems/remove-duplicates-from-sorted-list,

->Using Dictionary

public static Node removeDuplicates (Node head) {
    Dictionary<int, int> dict = new Dictionary<int, int> ();
    Node temp = head;
    Node prev = null;
    while (temp != null) {
        if (!dict.ContainsKey (temp.data)) {
            dict.Add (temp.data, 1);
            if (prev == null) {
                prev = temp;
            } else {
                prev.next = temp;
                prev = temp;
            }
        }
        if (temp.next == null) {
            prev.next = null;
            break;
        }
        temp = temp.next;
    }
    return head;
}

---------------------------------------------------------------------------------------------------

-> Without Dictionary

public class Solution {
    public ListNode DeleteDuplicates(ListNode head) {
        Dictionary<int, int> dict = new Dictionary<int, int> ();
    ListNode temp = head;
    ListNode next_next = null;
        while (temp!= null && temp.next != null)
        {
            if (temp.val == temp.next.val)
            {
                next_next = temp.next.next;
                temp.next = next_next;
            }
            else
                temp = temp.next;
        }
    return head;
    }
}